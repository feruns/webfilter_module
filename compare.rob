
import xml.etree.ElementTree as ET

def get_first_elements_from_list(xml_tree, xpath, list_name):
    """
    Extract the first element of the list elements at a given XPath and return the merged values.
    
    Args:
    - xml_tree: Parsed ElementTree object.
    - xpath: Full XPath to the elements containing the list (e.g., '/a/b/elt/c').
    - list_name: Name of the list tag under the given XPath (e.g., 'd').
    
    Returns:
    - Merged string of the first 'list_name' elements' text.
    """
    root = xml_tree.getroot()
    
    # Find all elements that match the provided XPath
    elements = root.findall(xpath)
    
    first_values = []
    
    for element in elements:
        # Find the first child element with the tag matching the list_name (e.g., 'd')
        first_element = element.find(list_name)
        
        if first_element is not None:
            first_values.append(first_element.text)  # Collect the text of the first 'list_name' element
    
    # Merge the collected values into a single string and return
    return ' '.join(filter(None, first_values))  # Filter out None values in case some elements were missing

# Example usage:
tree1 = ET.parse('file1.xml')
xpath = './a/b/elt/c'
list_name = 'd'

merged_values = get_first_elements_from_list(tree1, xpath, list_name)
print(merged_values)
